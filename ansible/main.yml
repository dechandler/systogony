---
- name: Common
  hosts: all
  tasks:

  # # Post-bootstrap cleanup
  #   - name: Cleanup bootstrap conditions
  #     include_role:
  #       name: init/cleanup

  # # Base setup
  #   - name: SSHD
  #     include_role:
  #       name: service/sshd

  #   - name: System settings
  #     include_role:
  #       name: base/main

    - name: Enforce state for automation user
      include_role:
        name: base/user
      vars:
        USER: "{{ automation_user }}"

  # Primary user setup
    - name: Shell-based primary user setup
      include_role:
        name: shell/user
      vars:
        USER: "{{ primary_user }}"
      when: >
        ['server'] | group_match(group_names)
        and primary_user


- name: Self-Hosted Services
  hosts: all
  # vars_files:
  #   - private/maps/services.yaml
  tasks:

    - debug:
        var: service_instances

    - name: Prometheus Monitoring Server
      include_role:
        name: service/prometheus
      when: '"prometheus" in service_instances'
      vars:
        prometheus: "{{ item }}"
        prometheus_port: "{{ item.ports.primary }}"
      loop: "[ {{ service_instances.prometheus }} ]"


    - name: Mosquitto MQTT Server
      include_role:
        name: service/mosquitto
      vars:
        mosquitto_service_user:
          name: "{{ mosquitto.service_user_name | default('mosquitto') }}"
          uid: "{{   mosquitto.service_user_uid | default(1883) }}"
          home: "{{          mosquitto.base_dir | default('/var/lib/mosquitto') }}"
          comment: "{{    mosquitto.description | default('Mosquitto MQTT Server') }}"
        mosquitto_port: "{{ mosquitto.ports.primary }}"
        mosquitto_exporter_port: "{{ mosquitto.metrics.port }}"
      loop: "[ {{ service_instances.mosquitto }} ]"
      loop_control:
        loop_var: mosquitto
      when: '"mosquitto" in service_instances'


    - name: Home Assistant Automation Server
      include_role:
        name: service/home-assistant
      vars:
        home_assistant_service_user:
          name: "{{ home_assistant.service_user_name | default('home-assistant') }}"
          uid: "{{   home_assistant.service_user_uid | default(4277) }}"
          home: "{{          home_assistant.base_dir | default('/var/lib/home-assistant') }}"
          comment: "{{    home_assistant.description | default('Home Assistant') }}"
      loop: "[ {{ service_instances['home_assistant'] | default({}) }} ]"
      loop_control:
        loop_var: home_assistant
      when: '"home_assistant" in service_instances'




    - name: Radicale DAV Server
      include_role:
        name: service/radicale
      vars:
        radicale_service_user:
          name: "{{ radicale.service_user_name | default('radicale') }}"
          uid: "{{   radicale.service_user_uid | default(5232) }}"
          home: "{{          radicale.base_dir | default('/var/lib/radicale') }}"
          comment: "{{    radicale.description | default('Radicale DAV Server') }}"
        radicale_port: "{{ radicale.ports.primary }}"
      loop: "[ {{ service_instances['radicale'] | default({}) }} ]"
      loop_control:
        loop_var: radicale
      when: '"radicale" in service_instances'


    - name: Audiobookshelf Server
      include_role:
        name: service/audiobookshelf
      vars:
        audiobookshelf_service_user:
          name: "{{ audiobookshelf.service_user_name | default('audiobookshelf') }}"
          uid: "{{   audiobookshelf.service_user_uid | default(3378) }}"
          home: "{{          audiobookshelf.base_dir | default('/var/lib/audiobookshelf') }}"
          comment: "{{    audiobookshelf.description | default('ABS Audiobook Server') }}"
        audiobookshelf_port: "{{ audiobookshelf.ports.primary }}"
      loop: "[ {{ service_instances['audiobookshelf'] | default({}) }} ]"
      loop_control:
        loop_var: audiobookshelf
      when: '"audiobookshelf" in service_instances'


    # - name: Syncthing Server
    #   include_role:
    #     name: service/syncthing
    #   vars:
    #     syncthing_user:
    #       name: "{{ syncthing.service_user_name | default('syncthing') }}"
    #       uid: "{{   syncthing.service_user_uid | default(7962) }}"
    #       home: "{{          syncthing.base_dir | default('/var/lib/syncthing') }}"
    #       comment: "{{    syncthing.description | default('Syncthing - Server Mode') }}"
    #     syncthing_port: "{{ syncthing.ports.primary }}"
    #     #syncthing_exporter_port: "{{ syncthing.metrics.port }}"
    #   loop: "[ {{ service_instances.syncthing }} ]"
    #   loop_control:
    #     loop_var: syncthing
    #   when: >
    #     "syncthing_server" in service_instances

    # - name: Syncthing Desktop
    #   include_role:
    #     name: service/syncthing
    #   vars:
    #     syncthing_user: "{{ primary_user }}"
    #       name: "{{ primary_user.name }}"
    #       uid: "{{ primary_user.uid }}"
    #       home: "{{  | default('/var/lib/syncthing') }}"
    #       comment: "{{    syncthing.description | default('Syncthing - Server Mode') }}"
    #     syncthing_port: "{{ syncthing.ports.primary }}"
    #     #syncthing_exporter_port: "{{ syncthing.metrics.port }}"
    #   loop: "[ {{ service_instances.syncthing }} ]"
    #   loop_control:
    #     loop_var: syncthing
    #   when: >
    #     "syncthing_desktop" in service_instances



    # - name: Caddy Reverse Proxy Server
    #   include_role:
    #     name: service/caddy
    #   when: inventory_hostname | has_service('caddy', services)
