---
- name: Common
  hosts: all
  vars_files:
    - private/maps/services.yaml
  tasks:

  # Redo bootstrap steps and post-bootstrap cleanup
    - name: SSHD
      include_role:
        name: service/sshd

    - name: System settings
      include_role:
        name: base/main

    - name: Enforce state for automation user
      include_role:
        name: base/user
      vars:
        USER: "{{ automation_user }}"

    - name: Remove init user
      include_role:
        name: init/user
        tasks_from: remove

  # Primary user and environment setup
    - name: Shell-based primary user setup
      include_role:
        name: shell/user
      vars:
        USER: "{{ primary_user }}"
      when: >
        ['server'] | group_match(group_names)


    - name: Prometheus Monitoring Server
      include_role:
        name: service/prometheus
      vars:
        monitored_services: "{{ services }}"
        prometheus_port: "{{ services | deep_get('prometheus.ports.primary', 9090) }}"
      when: inventory_hostname | has_service('prometheus', services)


    - name: Mosquitto MQTT Server
      include_role:
        name: service/mosquitto
      vars:
        mosquitto_port: "{{ services | deep_get('mosquitto.ports.primary', 1883) }}"
        mosquitto_exporter_port: "{{ services | deep_get('mosquitto.metrics.port', 9234) }}"
      when: inventory_hostname | has_service('mosquitto', services)


    - name: Home Assistant Automation Server
      include_role:
        name: service/home-assistant
      when: inventory_hostname | has_service('home-assistant', services)


    - name: Radicale DAV Server
      include_role:
        name: service/radicale
      vars:
        radicale_port: "{{ services | deep_get('radicale.ports.primary', 5232) }}"
      when: inventory_hostname | has_service('radicale', services)


    - name: Audiobookshelf Server
      include_role:
        name: service/audiobookshelf
      vars:
        audiobookshelf_port: "{{ services | deep_get('audiobookshelf.ports.primary', 13378) }}"
      when: inventory_hostname | has_service('audiobookshelf', services)
